# NGINX Service Directory

# This directory is dedicated to the NGINX service, including the Dockerfile for building the NGINX image and configuration files.

# `Dockerfile`: Instructions for building the NGINX Docker image.
# `conf/`: Contains NGINX configuration files.
# `.dockerignore`: Specifies patterns to ignore when copying files into the Docker image.


#### EXAMPLE_ONE ####

FROM alpine:3.14
 # Specifies the base image for the Docker image. In this case, it's Alpine Linux version 3.14, a lightweight Linux distribution.
 # Look for the wanted tag in dockerhub, in this example, it's "3.14".

LABEL maintainer="Yves Althaus <yalthaus@st0udent.42lausanne.ch>"
 # Adds metadata to the Docker image, specifying the maintainer of the image.

ARG DOMAIN
 # Declares an argument named DOMAIN that can be passed at build time. This will be used to customize the SSL certificate for the specified domain.

RUN apk update && apk upgrade && apk add --no-cache --quiet --update nginx openssl vim
 # Updates the package list and upgrades the packages on the Alpine Linux base image.
 # Installs nginx, openssl, and vim on the Alpine image without using the cache to ensure you're getting the latest versions. The --quiet option reduces the output from the command.

EXPOSE 443
 # Informs Docker that the container listens on port 443 at runtime. This is the standard port for HTTPS traffic.

RUN	mkdir -p /etc/nginx/ssl/private /etc/nginx/ssl/certs
 # Creates directories for storing the SSL private key and certificate.

RUN openssl req -newkey rsa:4096 -x509 -sha256 -days 365 -nodes \
        -out /etc/nginx/ssl/certs/$DOMAIN.crt \
        -keyout /etc/nginx/ssl/private/$DOMAIN.key \
        -subj "/C=CH/ST=Switzerland/L=Lausanne/O=42 School/OU=42Lausanne/CN=${DOMAIN}/"
 # Generates a new SSL certificate and private key for the domain specified by the DOMAIN build argument. It uses RSA-4096 encryption, SHA-256 hashing, and is valid for 365 days. The subject of the certificate includes various fields like country, state, locality, organization, organizational unit, and common name.

RUN mkdir -p /var/run/nginx
 # Creates the directory where NGINX will store its run files.

COPY ./conf/nginx.conf /etc/nginx/http.d/default.conf
 # Copies the NGINX configuration file from the host machine to the container. This configuration file must be located in the ./conf directory relative to the Dockerfile's location.

CMD ["nginx", "-g", "daemon off;"]
 # Specifies the default command to run when the container starts. In this case, it starts NGINX with the daemon off; directive, which runs NGINX in the foreground. This is necessary because Docker containers stop when the main process exits, and running NGINX in the foreground keeps the process alive.


#### EXAMPLE_TWO ####

FROM	debian:buster
 # This specifies the base image as Debian Buster, which is a specific version of Debian.

RUN		apt-get update
 # Updates the list of packages in the Debian package management system.

RUN		apt-get install -y nginx \
                openssl

RUN mkdir /etc/nginx/ssl

RUN openssl req -newkey rsa:4096 -x509 -sha256 -days 365 -nodes \
       -out /etc/nginx/ssl/vbachele.crt \
       -keyout /etc/nginx/ssl/vbachele.key \
       -subj "/C=FR/ST=Paris/L=Paris/O=42 School/OU=vbachele/CN=vbachele/"

COPY ./conf/nginx.conf /etc/nginx/conf.d

RUN mkdir -p /run/nginx

EXPOSE	443

CMD ["nginx", "-g", "daemon off;"]